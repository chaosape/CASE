import <std_connector.camkes>;

import "components/Clock_Driver/Clock_Driver.camkes";
import "components/GPIO_Driver/GPIO_Driver.camkes";
import "components/UART_Driver/UART_Driver.camkes";
import "components/Decrypt/Decrypt.camkes";
import "components/Encrypt/Encrypt.camkes";
import "components/Server/Server.camkes";
import "components/CAN_Framing/CAN_Framing.camkes";
import "components/CAN_Driver/CAN_Driver.camkes";
import "components/Virtual_Machine/Virtual_Machine.camkes";
import "components/tb_Monitors/tb_encrypt_server2self_Monitor/tb_encrypt_server2self_Monitor.camkes";
import "components/tb_Monitors/tb_uart_driver_encrypt2self_Monitor/tb_uart_driver_encrypt2self_Monitor.camkes";
import "components/tb_Monitors/tb_can_framing_server2self_Monitor/tb_can_framing_server2self_Monitor.camkes";
import "components/tb_Monitors/tb_server_framing2self_Monitor/tb_server_framing2self_Monitor.camkes";
import "components/tb_Monitors/tb_can_framing_can2self_status_Monitor/tb_can_framing_can2self_status_Monitor.camkes";
import "components/tb_Monitors/tb_encrypt_uart2self_Monitor/tb_encrypt_uart2self_Monitor.camkes";
import "components/tb_Monitors/tb_virtual_machine_server2self_reboot_Monitor/tb_virtual_machine_server2self_reboot_Monitor.camkes";
import "components/tb_Monitors/tb_server_decrypt2self_Monitor/tb_server_decrypt2self_Monitor.camkes";
import "components/tb_Monitors/tb_can_framing_can2self_frame_Monitor/tb_can_framing_can2self_frame_Monitor.camkes";
import "components/tb_Monitors/tb_server_vm2self_Monitor/tb_server_vm2self_Monitor.camkes";
import "components/tb_Monitors/tb_decrypt_uart2self_Monitor/tb_decrypt_uart2self_Monitor.camkes";
import "components/tb_Monitors/tb_can_driver_framing2self_Monitor/tb_can_driver_framing2self_Monitor.camkes";

assembly {
  composition {
    component Clock_Driver clock_driver;
    component GPIO_Driver gpio_driver;
    component UART_Driver uart_driver;
    component Decrypt decrypt;
    component Encrypt encrypt;
    component Server server;
    component CAN_Framing can_framing;
    component CAN_Driver can_driver;
    component Virtual_Machine virtual_machine;
    component tb_encrypt_server2self_Monitor tb_encrypt_server2self_monitor;
    component tb_uart_driver_encrypt2self_Monitor tb_uart_driver_encrypt2self_monitor;
    component tb_can_framing_server2self_Monitor tb_can_framing_server2self_monitor;
    component tb_server_framing2self_Monitor tb_server_framing2self_monitor;
    component tb_can_framing_can2self_status_Monitor tb_can_framing_can2self_status_monitor;
    component tb_encrypt_uart2self_Monitor tb_encrypt_uart2self_monitor;
    component tb_virtual_machine_server2self_reboot_Monitor tb_virtual_machine_server2self_reboot_monitor;
    component tb_server_decrypt2self_Monitor tb_server_decrypt2self_monitor;
    component tb_can_framing_can2self_frame_Monitor tb_can_framing_can2self_frame_monitor;
    component tb_server_vm2self_Monitor tb_server_vm2self_monitor;
    component tb_decrypt_uart2self_Monitor tb_decrypt_uart2self_monitor;
    component tb_can_driver_framing2self_Monitor tb_can_driver_framing2self_monitor;

    connection sel4Notification conn1(from gpio_driver.CAN1Int, to can_driver.CAN1Int);
    connection seL4RPCCall conn2(from uart_driver.self2decrypt0, to tb_decrypt_uart2self_monitor.mon);
    connection seL4RPCCall conn3(from decrypt.uart2self, to tb_decrypt_uart2self_monitor.mon);
    connection sel4Notification conn4(from tb_decrypt_uart2self_monitor.monsig, to decrypt.tb_uart2self_notification);
    connection seL4RPCCall conn5(from uart_driver.self2encrypt0, to tb_encrypt_uart2self_monitor.mon);
    connection seL4RPCCall conn6(from encrypt.uart2self, to tb_encrypt_uart2self_monitor.mon);
    connection sel4Notification conn7(from tb_encrypt_uart2self_monitor.monsig, to encrypt.tb_uart2self_notification);
    connection seL4RPCCall conn8(from uart_driver.clkcar, to clock_driver.clkcar);
    connection seL4RPCCall conn9(from decrypt.self2server0, to tb_server_decrypt2self_monitor.mon);
    connection seL4RPCCall conn10(from server.decrypt2self, to tb_server_decrypt2self_monitor.mon);
    connection sel4Notification conn11(from tb_server_decrypt2self_monitor.monsig, to server.tb_decrypt2self_notification);
    connection seL4RPCCall conn12(from encrypt.self2uart0, to tb_uart_driver_encrypt2self_monitor.mon);
    connection seL4RPCCall conn13(from uart_driver.encrypt2self, to tb_uart_driver_encrypt2self_monitor.mon);
    connection sel4Notification conn14(from tb_uart_driver_encrypt2self_monitor.monsig, to uart_driver.tb_encrypt2self_notification);
    connection seL4RPCCall conn15(from server.self2encrypt0, to tb_encrypt_server2self_monitor.mon);
    connection seL4RPCCall conn16(from encrypt.server2self, to tb_encrypt_server2self_monitor.mon);
    connection sel4Notification conn17(from tb_encrypt_server2self_monitor.monsig, to encrypt.tb_server2self_notification);
    connection seL4RPCCall conn18(from server.self2framing0, to tb_can_framing_server2self_monitor.mon);
    connection seL4RPCCall conn19(from can_framing.server2self, to tb_can_framing_server2self_monitor.mon);
    connection sel4Notification conn20(from tb_can_framing_server2self_monitor.monsig, to can_framing.tb_server2self_notification);
    connection seL4RPCCall conn21(from server.self2vm_reboot0, to tb_virtual_machine_server2self_reboot_monitor.mon);
    connection seL4RPCCall conn22(from virtual_machine.server2self_reboot, to tb_virtual_machine_server2self_reboot_monitor.mon);
    connection sel4Notification conn23(from tb_virtual_machine_server2self_reboot_monitor.monsig, to virtual_machine.tb_server2self_reboot_notification);
    connection seL4RPCCall conn24(from can_framing.self2server0, to tb_server_framing2self_monitor.mon);
    connection seL4RPCCall conn25(from server.framing2self, to tb_server_framing2self_monitor.mon);
    connection sel4Notification conn26(from tb_server_framing2self_monitor.monsig, to server.tb_framing2self_notification);
    connection seL4RPCCall conn27(from can_framing.self2can0, to tb_can_driver_framing2self_monitor.mon);
    connection seL4RPCCall conn28(from can_driver.framing2self, to tb_can_driver_framing2self_monitor.mon);
    connection sel4Notification conn29(from tb_can_driver_framing2self_monitor.monsig, to can_driver.tb_framing2self_notification);
    connection seL4RPCCall conn30(from can_driver.self2framing_status0, to tb_can_framing_can2self_status_monitor.mon);
    connection seL4RPCCall conn31(from can_framing.can2self_status, to tb_can_framing_can2self_status_monitor.mon);
    connection sel4Notification conn32(from tb_can_framing_can2self_status_monitor.monsig, to can_framing.tb_can2self_status_notification);
    connection seL4RPCCall conn33(from can_driver.self2framing_frame0, to tb_can_framing_can2self_frame_monitor.mon);
    connection seL4RPCCall conn34(from can_framing.can2self_frame, to tb_can_framing_can2self_frame_monitor.mon);
    connection sel4Notification conn35(from tb_can_framing_can2self_frame_monitor.monsig, to can_framing.tb_can2self_frame_notification);
    connection sel4Notification conn36(from can_driver.CANIntAck, to gpio_driver.CANIntAck);
    connection seL4RPCCall conn37(from can_driver.gpio_spi_can1_cs, to gpio_driver.gpio_spi_can1_cs);
    connection seL4RPCCall conn38(from can_driver.clkcar, to clock_driver.clkcar);
    connection seL4RPCCall conn39(from virtual_machine.self2server0, to tb_server_vm2self_monitor.mon);
    connection seL4RPCCall conn40(from server.vm2self, to tb_server_vm2self_monitor.mon);
    connection sel4Notification conn41(from tb_server_vm2self_monitor.monsig, to server.tb_vm2self_notification);
    connection seL4RPCCall conn42(from virtual_machine.clkcarfwd, to clock_driver.clkcarfwd);
    connection seL4RPCCall conn43(from virtual_machine.uartfwd, to uart_driver.uartfwd);
    connection seL4RPCCall conn44(from virtual_machine.gpio_usb_vbus_en1, to gpio_driver.gpio_usb_vbus_en1);
  }
}
