#include <autoconf.h>

import <std_connector.camkes>;

import "VM_shim/VM_shim.camkes";
import "VM/VM.camkes";

import <tb_Monitor_SMACCM_DATA__Camera_Bounding_Box_i.idl4>;
import <tb_Monitor_bool_1.idl4>;

import <gen_fwd.idl4>;

component Virtual_Machine {
    include <tb_smaccmpilot_tk1_types.h>;
    uses tb_Monitor_SMACCM_DATA__Camera_Bounding_Box_i tb_self2server0;
    uses tb_Monitor_bool_1 tb_server2self_reboot;
    consumes QueuedData tb_server2self_reboot_notification;

    uses gpio_inf gpio_usb_vbus_en1;

    uses gen_fwd_inf uartfwd;
    uses gen_fwd_inf clkcarfwd;

    composition {
        component VM vm_obj;
        component VM_shim vm_shim_obj;

        export vm_shim_obj.tb_self2server -> tb_self2server0;
        export vm_shim_obj.tb_server2self_reboot -> tb_server2self_reboot;
        export vm_shim_obj.tb_server2self_reboot_notification -> tb_server2self_reboot_notification;
        export vm_obj.gpio_usb_vbus_en1 -> gpio_usb_vbus_en1;
        export vm_obj.uartfwd -> uartfwd;
        export vm_obj.clkcarfwd -> clkcarfwd;

        connection seL4Notification restart(from vm_shim_obj.restart_event, to vm_obj.restart_event);
        connection seL4Notification new_bbox(from vm_obj.bbox_notification, to vm_shim_obj.bbox_notification);
        connection seL4SharedData bbox(from vm_obj.bbox, to vm_shim_obj.bbox);
    }

    configuration {
        vm_shim_obj.tb_self2server_attributes <- tb_self2server0_attributes;
        vm_shim_obj.tb_server2self_reboot_attributes <- tb_server2self_reboot_attributes;

	vm_obj.base_prio = 100;
        vm_obj.priority = 101;
        vm_shim_obj.priority = 103;

        vm_obj.untyped_mmios = [
            "0x50046000:12", // Interrupt Controller Virtual CPU interface (Virtual Machine view)
            "0x60004000:12", // Interrupt controller registers (ICTLR)
#ifdef CONFIG_VM_TK1_EMMC_ROOTFS
            "0x700b0000:12", // SDMMC-1, SDMMC-2, SDMMC-3, SDMMC-4,
#endif
            "0x7d000000:12", // USB on-the-go (micro)
            "0x7d004000:12", // USB on top board
            "0x7d008000:12", // USB on bottom board
            "0xb0000000:28", // Linux kernel memory regions
            "0xc0000000:29", // Linux kernel memory regions
            "0xe0000000:28", // Linux kernel memory regions
            ];

        vm_obj.irqs =  [
            27, // INTERRUPT_VGPT (INTERRUPT_PPI_11)
            53, // INTERRUPT_USB2
#ifdef CONFIG_VM_TK1_EMMC_ROOTFS
            63, // INTERRUPT_SDMMC4
#endif
            122, // INTERRUPT_UARTD
            129, // INTERRUPT_USB3
            ];

        vm_obj.smmu = [10, 23];

        vm_obj.asid_pool = true;

        vm_obj.simple = true;
        vm_obj.cnode_size_bits = 21;
        vm_obj.simple_untyped24_pool = 10;

#ifdef CONFIG_TK1_VM_HACK
	vm_obj.num_extra_frame_caps = 2;
#else
	vm_obj.num_extra_frame_caps = 0;
#endif
	vm_obj.extra_frame_map_address = 0xd0000000;
    }
}
