import "uart_shim/uart_shim.camkes";

import <tb_Monitor_SMACCM_DATA__UART_Packet_i_100.idl4>;
import <tb_Monitor_SMACCM_DATA__UART_Packet_i_5.idl4>;
import <tb_Monitor_bool_1.idl4>;

import <clkcar.idl4>;
import <gen_fwd.idl4>;

component uartbase {
    hardware;
    dataport Buf tk1_uart_regs;
    emits DataAvailable irq;
}

component UART_Driver {
    include <tb_smaccmpilot_tk1_types.h>;
    uses tb_Monitor_SMACCM_DATA__UART_Packet_i_100 tb_self2decrypt0;
    uses tb_Monitor_SMACCM_DATA__UART_Packet_i_5 tb_encrypt2self;
    consumes QueuedData tb_encrypt2self_notification;
    uses tb_Monitor_bool_1 tb_self2encrypt0;

    uses clkcar_inf clkcar;
    provides gen_fwd_inf uartfwd;

    composition {
        component uartbase uartbase_obj;
        component uart_shim uart_shim_obj;

        connection seL4HardwareMMIO tk1_uart_regs_mmio(from uart_shim_obj.tk1_uart_regs, to uartbase_obj.tk1_uart_regs);
        connection seL4HardwareInterrupt uart_irq(from uartbase_obj.irq, to uart_shim_obj.interrupt);

        export uart_shim_obj.tb_self2decrypt -> tb_self2decrypt0;
        export uart_shim_obj.tb_encrypt2self -> tb_encrypt2self;
        export uart_shim_obj.tb_encrypt2self_notification -> tb_encrypt2self_notification;
        export uart_shim_obj.tb_self2encrypt -> tb_self2encrypt0;
        export uart_shim_obj.gen_fwd -> uartfwd;
        export uart_shim_obj.clkcar -> clkcar;
    }

    configuration {
        uart_shim_obj.tb_self2decrypt_attributes <- tb_self2decrypt0_attributes;
        uart_shim_obj.tb_encrypt2self_attributes <- tb_encrypt2self_attributes;
        uart_shim_obj.tb_self2encrypt_attributes <- tb_self2encrypt0_attributes;

        uart_shim_obj.priority = 250;
        uart_shim_obj.gen_fwd_priority = 101;

        uartbase_obj.tk1_uart_regs_paddr = 0x70006000;
        uartbase_obj.tk1_uart_regs_size = 0x1000;

        // uartbase_obj.irq_irq_number = 68;   // UART A
        uartbase_obj.irq_irq_number = 69;      // UART B
        // uartbase_obj.irq_irq_number = 78;   // UART C
        // uartbase_obj.irq_irq_number = 122;  // UART D
    }
}
