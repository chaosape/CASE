#ifndef __TB_AADL_uxas_processor_types__H
#define __TB_AADL_uxas_processor_types__H

/**************************************************************************
  Copyright (c) 2013-2016 Rockwell Collins and the University of
  Minnesota. Developed with the sponsorship of the Defense Advanced
  Research Projects Agency (DARPA).

  Permission is hereby granted, free of charge, to any person
  obtaining a copy of this data, including any software or models
  in source or binary form, as well as any drawings,
  specifications, and documentation (collectively "the Data"), to
  deal in the Data without restriction, including without
  limitation the rights to use, copy, modify, merge, publish,
  distribute, sublicense, and/or sell copies of the Data, and to
  permit persons to whom the Data is furnished to do so, subject to
  the following conditions:

  The above copyright notice and this permission notice shall be
  included in all copies or substantial portions of the Data.

  THE DATA IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
  OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
  NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS, SPONSORS,
  DEVELOPERS, CONTRIBUTORS, OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF
  CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  CONNECTION WITH THE DATA OR THE USE OR OTHER DEALINGS IN THE
  DATA.
 **************************************************************************/

/**************************************************************************

  ***AUTOGENERATED CODE: DO NOT MODIFY***

This file contains the datatypes used for communications between
AADL components as defined in the system implementation uxas_processor.

 **************************************************************************/

#include <stdbool.h>
#include <stdint.h>
#ifndef TB_VERIFY
#include <stddef.h>
#endif // TB_VERIFY

#define __TB_OS_CAMKES__
#define TB_MONITOR_READ_ACCESS 111
#define TB_MONITOR_WRITE_ACCESS 222

#ifndef TB_VERIFY
#define MUTEXOP(OP)\
if((OP) != 0) {\
  fprintf(stderr,"Operation " #OP " failed in %s at %d.\n",__FILE__,__LINE__);\
  *((int*)0)=0xdeadbeef;\
}
#else 
#define MUTEXOP(OP) OP
#endif // TB_VERIFY
#ifndef TB_VERIFY
#define CALLBACKOP(OP)\
if((OP) != 0) {\
  fprintf(stderr,"Operation " #OP " failed in %s at %d.\n",__FILE__,__LINE__);\
  *((int*)0)=0xdeadbeef;\
}
#else 
#define CALLBACKOP(OP) OP
#endif // TB_VERIFY
typedef 
      struct CMASI__WavelengthBand_i { 
         int32_t enumAsInt  ; 
      } CMASI__WavelengthBand_i ; 

typedef 
      struct UXTASK__FootprintRequest_i { 
         int64_t FootprintRequestID  ; 
         int64_t VehicleID  ; 
         CMASI__WavelengthBand_i EligibleWavelengths  ; 
         float GroundSampleDistances  ; 
         float AglAltitudes  ; 
         float ElevationAngles  ; 
      } UXTASK__FootprintRequest_i ; 

typedef 
      struct CMASI__KeyValuePair_i { 
         int32_t Key  ; 
         int32_t Value  ; 
      } CMASI__KeyValuePair_i ; 

typedef 
      struct CMASI__ServiceStatusType_i { 
         int32_t enumAsInt  ; 
      } CMASI__ServiceStatusType_i ; 

typedef 
      struct CMASI__ServiceStatus_i { 
         float PercentComplete  ; 
         CMASI__KeyValuePair_i Info  ; 
         CMASI__ServiceStatusType_i StatusType  ; 
      } CMASI__ServiceStatus_i ; 

typedef 
      struct CMASI__AltitudeType_i { 
         int32_t enumAsInt  ; 
      } CMASI__AltitudeType_i ; 

typedef 
      struct CMASI__Location3D_i { 
         double Latitude  ; 
         double Longitude  ; 
         float Altitude  ; 
         CMASI__AltitudeType_i AltitudeType  ; 
      } CMASI__Location3D_i ; 

typedef 
      struct IMPACT__LineOfInterest_i { 
         int64_t LineID  ; 
         CMASI__Location3D_i Line  ; 
      } IMPACT__LineOfInterest_i ; 

typedef 
      struct IMPACT__VehicleSummary_i { 
         int64_t VehicleID  ; 
         int64_t DestinationTaskID  ; 
         int64_t InitialTaskID  ; 
         float InitialTaskPercentage  ; 
         int64_t EstimateTimeToTaskPercentage  ; 
         int64_t TimeToArrive  ; 
         int64_t TimeOnTask  ; 
         float EnergyRemaining  ; 
         bool BeyondCommRange  ; 
      } IMPACT__VehicleSummary_i ; 

typedef 
      struct IMPACT__TaskSummary_i { 
         int64_t TaskID  ; 
         IMPACT__VehicleSummary_i PerformingVehicles  ; 
         float BestEffort  ; 
      } IMPACT__TaskSummary_i ; 

typedef 
      struct IMPACT__BatchSummaryResponse_i { 
         int64_t ResponseID  ; 
         IMPACT__TaskSummary_i Summaries  ; 
      } IMPACT__BatchSummaryResponse_i ; 

typedef 
      struct CMASI__AutomationRequest_i { 
         int64_t EntityList  ; 
         int64_t TaskList  ; 
         int64_t TaskListSize  ; 
         int32_t TaskRelationships  ; 
         int64_t OperatingRegion  ; 
         bool RedoAllTasks  ; 
      } CMASI__AutomationRequest_i ; 

typedef 
      struct UXTASK__PlanningState_i { 
         int64_t EntityID  ; 
         CMASI__Location3D_i PlanningPosition  ; 
         float PlanningHeading  ; 
      } UXTASK__PlanningState_i ; 

typedef 
      struct UXTASK__CoordinatedAutomationRequest_i { 
         int64_t RequestID  ; 
         int64_t MaximumResponseTime  ; 
         CMASI__AutomationRequest_i OriginalRequest  ; 
         UXTASK__PlanningState_i PlanningStates  ; 
      } UXTASK__CoordinatedAutomationRequest_i ; 

typedef 
      struct UXTASK__TaskOptionCost_i { 
         int64_t VehicleID  ; 
         int64_t IntialTaskID  ; 
         int64_t IntialTaskOption  ; 
         int64_t DestinationTaskID  ; 
         int64_t DestinationTaskOption  ; 
         int64_t TimeToGo  ; 
      } UXTASK__TaskOptionCost_i ; 

typedef 
      struct UXTASK__AssignmentCostMatrix_i { 
         int64_t CorrespondingAutomationRequestID  ; 
         int32_t TaskLevelRelationship  ; 
         int64_t TaskList  ; 
         int64_t OperatingRegion  ; 
         UXTASK__TaskOptionCost_i CostMatrix  ; 
      } UXTASK__AssignmentCostMatrix_i ; 

typedef 
      struct CMASI__PayloadState_i { 
         int64_t PayloadID  ; 
         CMASI__KeyValuePair_i Parameters  ; 
      } CMASI__PayloadState_i ; 

typedef 
      struct CMASI__NavigationMode_i { 
         int32_t enumAsInt  ; 
      } CMASI__NavigationMode_i ; 

typedef 
      struct CMASI__EntityState_i { 
         int64_t ID  ; 
         float u  ; 
         float v  ; 
         float w  ; 
         float udot  ; 
         float vdot  ; 
         float wdot  ; 
         float Heading  ; 
         float Pitch  ; 
         float Roll  ; 
         float p  ; 
         float q  ; 
         float r  ; 
         float Course  ; 
         float Groundspeed  ; 
         CMASI__Location3D_i Location  ; 
         float EnergyAvailable  ; 
         float ActualEnergyRate  ; 
         CMASI__PayloadState_i PayloadStateList  ; 
         int64_t CurrentWaypoint  ; 
         int64_t CurrentCommand  ; 
         CMASI__NavigationMode_i FIXMEMode  ; 
         int64_t AssociatedTasks  ; 
         int64_t Time  ; 
         CMASI__KeyValuePair_i Info  ; 
      } CMASI__EntityState_i ; 

typedef 
      struct UXNATIVE__VideoRecord_i { 
         bool FIXMERecord  ; 
      } UXNATIVE__VideoRecord_i ; 

typedef 
      struct UXTASK__TaskOption_i { 
         int64_t TaskID  ; 
         int64_t OptionID  ; 
         int64_t EligibleEntities  ; 
         int64_t Cost  ; 
         CMASI__Location3D_i StartLocation  ; 
         float StartHeading  ; 
         CMASI__Location3D_i EndLocation  ; 
         float EndHeading  ; 
      } UXTASK__TaskOption_i ; 

typedef 
      struct UXTASK__SensorFootprint_i { 
         int64_t FootprintResponseID  ; 
         int64_t VehicleID  ; 
         int64_t CameraID  ; 
         int64_t GimbalID  ; 
         float HorizontalFOV  ; 
         float AglAltitude  ; 
         float GimbalElevation  ; 
         float AspectRatio  ; 
         float AchievedGSD  ; 
         CMASI__WavelengthBand_i CameraWavelength  ; 
         float HorizontalToLeadingEdge  ; 
         float HorizontalToTrailingEdge  ; 
         float HorizontalToCenter  ; 
         float WidthCenter  ; 
         float SlantRangeToCenter  ; 
      } UXTASK__SensorFootprint_i ; 

typedef 
      struct CMASI__PayloadConfiguration_i { 
         int64_t PayloadID  ; 
         int32_t PayloadKind  ; 
         CMASI__KeyValuePair_i Parameters  ; 
      } CMASI__PayloadConfiguration_i ; 

typedef 
      struct IMPACT__GroundVehicleConfiguration_i { 
         int64_t RoadGraphID  ; 
         float MinimumSpeed  ; 
         float MaximumSpeed  ; 
         float EnergyRate  ; 
      } IMPACT__GroundVehicleConfiguration_i ; 

typedef 
      struct UXTASK__TaskAssignment_i { 
         int64_t TaskID  ; 
         int64_t OptionID  ; 
         int64_t AssignedVehicle  ; 
         int64_t TimeThreshold  ; 
         int64_t TimeTaskCompleted  ; 
      } UXTASK__TaskAssignment_i ; 

typedef 
      struct UXTASK__TaskAssignmentSummary_i { 
         int64_t CorrespondingAutomationRequestID  ; 
         int64_t OperatingRegion  ; 
         UXTASK__TaskAssignment_i TaskList  ; 
         int64_t TaskListSize  ; 
      } UXTASK__TaskAssignmentSummary_i ; 

typedef 
      struct CMASI__SpeedType_i { 
         int32_t enumAsInt  ; 
      } CMASI__SpeedType_i ; 

typedef 
      struct CMASI__TurnType_i { 
         int32_t enumAsInt  ; 
      } CMASI__TurnType_i ; 

typedef 
      struct CMASI__VehicleAction_i { 
         int64_t AssociatedTaskList  ; 
      } CMASI__VehicleAction_i ; 

typedef 
      struct CMASI__Waypoint_i { 
         int64_t Number  ; 
         int64_t NextWaypoint  ; 
         float Speed  ; 
         CMASI__SpeedType_i SpeedType  ; 
         float ClimbRate  ; 
         CMASI__TurnType_i TurnType  ; 
         CMASI__VehicleAction_i VehicleActionList  ; 
         int64_t ContingencyWaypointA  ; 
         int64_t ContingencyWaypointB  ; 
         int64_t AssociatedTasks  ; 
      } CMASI__Waypoint_i ; 

typedef 
      struct ROUTE__RoutePlan_i { 
         int64_t RouteID  ; 
         CMASI__Waypoint_i Waypoints  ; 
         int64_t RouteCost  ; 
         CMASI__KeyValuePair_i RouteError  ; 
      } ROUTE__RoutePlan_i ; 

typedef 
      struct ROUTE__RoutePlanResponse_i { 
         int64_t ResponseID  ; 
         int64_t AssociatedTaskID  ; 
         int64_t VehicleID  ; 
         int64_t OperatingRegion  ; 
         ROUTE__RoutePlan_i RouteResponses  ; 
      } ROUTE__RoutePlanResponse_i ; 

typedef 
      struct CMASI__FlightProfile_i { 
         int32_t Name  ; 
         float Airspeed  ; 
         float PitchAngle  ; 
         float VerticalSpeed  ; 
         float MaxBankAngle  ; 
         float EnergyRate  ; 
      } CMASI__FlightProfile_i ; 

typedef 
      struct IMPACT__WaterZone_i { 
         int32_t dummy  ; 
      } IMPACT__WaterZone_i ; 

typedef 
      struct UXTASK__TaskComplete_i { 
         int64_t TaskID  ; 
         int64_t EntitiesInvolved  ; 
         int64_t TimeTaskCompleted  ; 
      } UXTASK__TaskComplete_i ; 

typedef 
      struct ROUTE__EgressRouteRequest_i { 
         int64_t RequestID  ; 
         CMASI__Location3D_i StartLocation  ; 
         float Radius  ; 
      } ROUTE__EgressRouteRequest_i ; 

typedef 
      struct UXTASK__UniqueAutomationRequest_i { 
         int64_t RequestID  ; 
         CMASI__AutomationRequest_i OriginalRequest  ; 
         bool SandBoxRequest  ; 
         UXTASK__PlanningState_i PlanningStates  ; 
      } UXTASK__UniqueAutomationRequest_i ; 

typedef 
      struct CMASI__ZoneAvoidanceType_i { 
         int32_t enumAsInt  ; 
      } CMASI__ZoneAvoidanceType_i ; 

typedef 
      struct CMASI__KeepOutZone_i { 
         CMASI__ZoneAvoidanceType_i ZoneType  ; 
      } CMASI__KeepOutZone_i ; 

typedef 
      struct IMPACT__GroundVehicleState_i { 
         int32_t dummy  ; 
      } IMPACT__GroundVehicleState_i ; 

typedef 
      struct ROUTE__RouteConstraints_i { 
         int64_t RouteID  ; 
         CMASI__Location3D_i StartLocation  ; 
         float StartHeading  ; 
         bool UseStartHeading  ; 
         CMASI__Location3D_i EndLocation  ; 
         float EndHeading  ; 
         bool UseEndHeading  ; 
      } ROUTE__RouteConstraints_i ; 

typedef 
      struct ROUTE__RouteRequest_i { 
         int64_t RequestID  ; 
         int64_t AssociatedTaskID  ; 
         int64_t VehicleID  ; 
         int64_t NumVehicleIDs  ; 
         int64_t OperatingRegion  ; 
         ROUTE__RouteConstraints_i RouteConstraints  ; 
         bool IsCostOnlyRequest  ; 
      } ROUTE__RouteRequest_i ; 

typedef 
      struct UXNATIVE__KillService_i { 
         int64_t ServiceID  ; 
      } UXNATIVE__KillService_i ; 

typedef 
      struct IMPACT__SpeedAltPair_i { 
         int64_t VehicleID  ; 
         float Speed  ; 
         float Altitude  ; 
         CMASI__AltitudeType_i AltitudeType  ; 
      } IMPACT__SpeedAltPair_i ; 

typedef 
      struct IMPACT__ImpactAutomationRequest_i { 
         int64_t RequestID  ; 
         CMASI__AutomationRequest_i TrialRequest  ; 
         IMPACT__SpeedAltPair_i OverridePlanningConditions  ; 
         int64_t PlayID  ; 
         int64_t SolutionID  ; 
         bool Sandbox  ; 
      } IMPACT__ImpactAutomationRequest_i ; 

typedef 
      struct IMPACT__BatchSummaryRequest_i { 
         int64_t RequestID  ; 
         int64_t Vehicles  ; 
         int64_t TaskList  ; 
         float InterTaskPercentage  ; 
         int64_t OperatingRegion  ; 
      } IMPACT__BatchSummaryRequest_i ; 

typedef 
      struct CMASI__KeepInZone_i { 
         int32_t dummy  ; 
      } CMASI__KeepInZone_i ; 

typedef 
      struct CMASI__MissionCommand_i { 
         CMASI__Waypoint_i WaypointList  ; 
         int64_t FirstWaypoint  ; 
      } CMASI__MissionCommand_i ; 

typedef 
      struct CMASI__CommandStatusType_i { 
         int32_t enumAsInt  ; 
      } CMASI__CommandStatusType_i ; 

typedef 
      struct CMASI__VehicleActionCommand_i { 
         int64_t CommandID  ; 
         int64_t VehicleID  ; 
         CMASI__VehicleAction_i VehicleActionList  ; 
         CMASI__CommandStatusType_i Status  ; 
      } CMASI__VehicleActionCommand_i ; 

typedef 
      struct CMASI__AutomationResponse_i { 
         CMASI__MissionCommand_i MissionCommandList  ; 
         CMASI__VehicleActionCommand_i VehicleCommandList  ; 
         CMASI__KeyValuePair_i Info  ; 
      } CMASI__AutomationResponse_i ; 

typedef 
      struct UXTASK__SensorFootprintRequests_i { 
         int64_t RequestID  ; 
         UXTASK__FootprintRequest_i Footprints  ; 
      } UXTASK__SensorFootprintRequests_i ; 

typedef 
      struct CMASI__LoiterType_i { 
         int32_t enumAsInt  ; 
      } CMASI__LoiterType_i ; 

typedef 
      struct CMASI__LoiterDirection_i { 
         int32_t enumAsInt  ; 
      } CMASI__LoiterDirection_i ; 

typedef 
      struct CMASI__LoiterAction_i { 
         CMASI__LoiterType_i LoiterType  ; 
         float Radius  ; 
         float Axis  ; 
         float Length  ; 
         CMASI__LoiterDirection_i Direction  ; 
         int64_t Duration  ; 
         float Airspeed  ; 
         CMASI__Location3D_i Location  ; 
      } CMASI__LoiterAction_i ; 

typedef 
      struct CMASI__LoiterTask_i { 
         CMASI__LoiterAction_i DesiredAction  ; 
      } CMASI__LoiterTask_i ; 

typedef 
      struct ROUTE__EgressRouteResponse_i { 
         int64_t ResponseID  ; 
         CMASI__Location3D_i NodeLocations  ; 
         float Headings  ; 
      } ROUTE__EgressRouteResponse_i ; 

typedef 
      struct CMASI__MustFlyTask_i { 
         CMASI__Location3D_i Position  ; 
         bool UseAltitude  ; 
      } CMASI__MustFlyTask_i ; 

typedef 
      struct UXTASK__TaskImplementationRequest_i { 
         int64_t RequestID  ; 
         int64_t CorrespondingAutomationRequestID  ; 
         int64_t StartingWaypointID  ; 
         int64_t VehicleID  ; 
         CMASI__Location3D_i StartPosition  ; 
         float StartHeading  ; 
         int64_t StartTime  ; 
         int64_t RegionID  ; 
         int64_t TaskID  ; 
         int64_t OptionID  ; 
         int64_t TimeThreshold  ; 
      } UXTASK__TaskImplementationRequest_i ; 

typedef 
      struct UXTASK__TaskInitialized_i { 
         int64_t TaskID  ; 
      } UXTASK__TaskInitialized_i ; 

typedef 
      struct ROUTE__RoutePlanRequest_i { 
         int64_t RequestID  ; 
         int64_t AssociatedTaskID  ; 
         int64_t VehicleID  ; 
         int64_t OperatingRegion  ; 
         ROUTE__RouteConstraints_i RouteConstraints  ; 
         bool IsCostOnlyRequest  ; 
      } ROUTE__RoutePlanRequest_i ; 

typedef 
      struct CMASI__OperatingRegion_i { 
         int64_t ID  ; 
         int64_t KeepInAreas  ; 
         int64_t KeepOutAreas  ; 
      } CMASI__OperatingRegion_i ; 

typedef 
      struct IMPACT__ImpactAutomationResponse_i { 
         int64_t ResponseID  ; 
         CMASI__AutomationResponse_i TrialResponse  ; 
         int64_t PlayID  ; 
         int64_t SolutionID  ; 
         bool Sandbox  ; 
         IMPACT__TaskSummary_i Summaries  ; 
      } IMPACT__ImpactAutomationResponse_i ; 

typedef 
      struct UXTASK__TaskActive_i { 
         int64_t TaskID  ; 
         int64_t EntityID  ; 
         int64_t TimeTaskActivated  ; 
      } UXTASK__TaskActive_i ; 

typedef 
      struct UXNATIVE__StartupComplete_i { 
         int32_t dummy  ; 
      } UXNATIVE__StartupComplete_i ; 

typedef 
      struct ROUTE__RouteResponse_i { 
         int64_t ResponseID  ; 
         ROUTE__RoutePlanResponse_i Routes  ; 
      } ROUTE__RouteResponse_i ; 

typedef 
      struct CMASI__Wedge_i { 
         float AzimuthCenterline  ; 
         float VerticalCenterline  ; 
         float AzimuthExtent  ; 
         float VerticalExtent  ; 
      } CMASI__Wedge_i ; 

typedef 
      struct CMASI__LineSearchTask_i { 
         CMASI__Location3D_i PointList  ; 
         CMASI__Wedge_i ViewAngleList  ; 
         bool UseInertialViewAngles  ; 
      } CMASI__LineSearchTask_i ; 

typedef 
      struct CMASI__AirVehicleConfiguration_i { 
         float MinimumSpeed  ; 
         float MaximumSpeed  ; 
         CMASI__FlightProfile_i NominalFlightProfile  ; 
         CMASI__FlightProfile_i AlternateFlightProfiles  ; 
         CMASI__LoiterType_i AvailableLoiterTypes  ; 
         CMASI__TurnType_i AvailableTurnTypes  ; 
         float MinimumAltitude  ; 
         CMASI__AltitudeType_i MinAltitudeType  ; 
         float MaximumAltitude  ; 
         CMASI__AltitudeType_i MaxAltitudeType  ; 
      } CMASI__AirVehicleConfiguration_i ; 

typedef 
      struct CMASI__RemoveZones_i { 
         int64_t ZoneList  ; 
      } CMASI__RemoveZones_i ; 

typedef 
      struct CMASI__RemoveTasks_i { 
         int64_t TaskList  ; 
      } CMASI__RemoveTasks_i ; 

typedef 
      struct UXTASK__TaskPlanOptions_i { 
         int64_t CorrespondingAutomationRequestID  ; 
         int64_t TaskID  ; 
         int32_t Composition  ; 
         UXTASK__TaskOption_i Options  ; 
      } UXTASK__TaskPlanOptions_i ; 

typedef 
      struct UXTASK__TaskImplementationResponse_i { 
         int64_t ResponseID  ; 
         int64_t CorrespondingAutomationRequestID  ; 
         int64_t TaskID  ; 
         int64_t OptionID  ; 
         int64_t VehicleID  ; 
         CMASI__Waypoint_i TaskWaypoints  ; 
         CMASI__Location3D_i FinalLocation  ; 
         float FinalHeading  ; 
         int64_t FinalTime  ; 
      } UXTASK__TaskImplementationResponse_i ; 

typedef 
      struct IMPACT__SurfaceVehicleConfiguration_i { 
         int64_t WaterArea  ; 
         float MinimumSpeed  ; 
         float MaximumSpeed  ; 
         float EnergyRate  ; 
         float MaxBankAngle  ; 
         float MaxBankRate  ; 
      } IMPACT__SurfaceVehicleConfiguration_i ; 

typedef 
      struct CMASI__PathWaypoint_i { 
         int64_t PauseTime  ; 
      } CMASI__PathWaypoint_i ; 

typedef 
      struct IMPACT__PointOfInterest_i { 
         int64_t PointID  ; 
         CMASI__Location3D_i Location  ; 
      } IMPACT__PointOfInterest_i ; 

typedef 
      struct UXTASK__UniqueAutomationResponse_i { 
         int64_t ResponseID  ; 
         CMASI__AutomationResponse_i OriginalResponse  ; 
      } UXTASK__UniqueAutomationResponse_i ; 

typedef 
      struct UXNATIVE__IncrementWaypoint_i { 
         int64_t VehicleID  ; 
      } UXNATIVE__IncrementWaypoint_i ; 

typedef 
      struct CMASI__PointSearchTask_i { 
         CMASI__Location3D_i SearchLocation  ; 
         float StandoffDistance  ; 
         CMASI__Wedge_i ViewAngleList  ; 
      } CMASI__PointSearchTask_i ; 

typedef 
      struct IMPACT__RadioTowerConfiguration_i { 
         CMASI__Location3D_i Position  ; 
         float FIXMERange  ; 
         bool Enabled  ; 
      } IMPACT__RadioTowerConfiguration_i ; 

typedef 
      struct UXTASK__TaskAutomationResponse_i { 
         int64_t ResponseID  ; 
         CMASI__AutomationResponse_i OriginalResponse  ; 
      } UXTASK__TaskAutomationResponse_i ; 

typedef 
      struct IMPACT__RadioTowerState_i { 
         bool Enabled  ; 
      } IMPACT__RadioTowerState_i ; 

typedef 
      struct CMASI__AbstractGeometry_i { 
         int32_t dummy  ; 
      } CMASI__AbstractGeometry_i ; 

typedef 
      struct CMASI__AreaSearchTask_i { 
         CMASI__AbstractGeometry_i SearchArea  ; 
         CMASI__Wedge_i ViewAngleList  ; 
      } CMASI__AreaSearchTask_i ; 

typedef 
      struct CMASI__Task_i { 
         int64_t TaskID  ; 
         int32_t Label  ; 
         int64_t EligibleEntities  ; 
         float RevisitRate  ; 
         CMASI__KeyValuePair_i Parameters  ; 
         int8_t Priority  ; 
         bool Required  ; 
      } CMASI__Task_i ; 

typedef 
      struct IMPACT__SurfaceVehicleState_i { 
         float BankAngle  ; 
         float Speed  ; 
      } IMPACT__SurfaceVehicleState_i ; 

typedef 
      struct UXNATIVE__CreateNewService_i { 
         int64_t ServiceID  ; 
         int32_t XmlConfiguration  ; 
      } UXNATIVE__CreateNewService_i ; 

typedef 
      struct UXTASK__AssignmentCoordination_i { 
         int64_t CoordinatedAutomationRequestID  ; 
         UXTASK__PlanningState_i PlanningState  ; 
      } UXTASK__AssignmentCoordination_i ; 

typedef 
      struct CMASI__SearchTask_i { 
         CMASI__WavelengthBand_i DesiredWavelengthBands  ; 
         int64_t DwellTime  ; 
         float GroundSampleDistance  ; 
      } CMASI__SearchTask_i ; 

typedef 
      struct CMASI__TravelMode_i { 
         int32_t enumAsInt  ; 
      } CMASI__TravelMode_i ; 

typedef 
      struct CMASI__FollowPathCommand_i { 
         int64_t FirstWaypoint  ; 
         CMASI__PathWaypoint_i WaypointList  ; 
         int64_t StartTime  ; 
         int64_t StopTime  ; 
         CMASI__TravelMode_i RepeatMode  ; 
      } CMASI__FollowPathCommand_i ; 

typedef 
      struct CMASI__EntityConfiguration_i { 
         int64_t ID  ; 
         int32_t Affiliation  ; 
         int32_t EntityType  ; 
         int32_t Label  ; 
         float NominalSpeed  ; 
         float NominalAltitude  ; 
         CMASI__AltitudeType_i NominalAltitudeType  ; 
         CMASI__PayloadConfiguration_i PayloadConfigurationList  ; 
         CMASI__KeyValuePair_i Info  ; 
      } CMASI__EntityConfiguration_i ; 

typedef 
      struct CMASI__AirVehicleState_i { 
         float Airspeed  ; 
         float VerticalSpeed  ; 
         float WindSpeed  ; 
         float WindDirection  ; 
      } CMASI__AirVehicleState_i ; 

typedef 
      struct UXTASK__SensorFootprintResponse_i { 
         int64_t ResponseID  ; 
         UXTASK__SensorFootprint_i Footprints  ; 
      } UXTASK__SensorFootprintResponse_i ; 

typedef 
      struct IMPACT__AreaOfInterest_i { 
         int64_t AreaID  ; 
         CMASI__AbstractGeometry_i Area  ; 
      } IMPACT__AreaOfInterest_i ; 

typedef 
      struct UXTASK__TaskAutomationRequest_i { 
         int64_t RequestID  ; 
         CMASI__AutomationRequest_i OriginalRequest  ; 
         bool SandBoxRequest  ; 
         UXTASK__PlanningState_i PlanningStates  ; 
      } UXTASK__TaskAutomationRequest_i ; 

#endif // __TB_AADL_uxas_processor_types__H
