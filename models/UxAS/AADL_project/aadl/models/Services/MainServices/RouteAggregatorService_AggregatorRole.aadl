package RouteAggregatorService_AggregatorRole_Pkg
public
	with CMASI;
    with IMPACT;
    with ROUTE;
    with UxAS_Node_Lib;

    with TB_SYS;

	-- This is a "dummy" top-level system. We use it so that we can check 
	--  "properties" of our component contract.
	process top_level

	end top_level;
	
	process implementation top_level.Impl
		subcomponents
			sub : thread RouteAggregatorService_AggregatorRole; 
	
		 
	end top_level.Impl;	
	
thread RouteAggregatorService_AggregatorRole
    features
        GroundVehicleConfiguration_in: in event data port impact::GroundVehicleConfiguration.i; 
        SurfaceVehicleConfiguration_in: in event data port impact::SurfaceVehicleConfiguration.i; 
        AirVehicleConfiguration_in: in event data port cmasi::AirVehicleConfiguration.i; 
        RouteRequest_in: in event data port route::RouteRequest.i; 
        RoutePlanResponse_in: in event data port route::RoutePlanResponse.i;
        ServiceStatus_out: out event data port cmasi::ServiceStatus.i; --This port is not mentioned in the Wiki. Per Derek, it is used for error reporting (or at least can be used for that.)
        RoutePlanRequest_out: out event data port route::RoutePlanRequest.i;
        RouteResponse_out: out event data port route::RouteResponse.i;
        properties
            Dispatch_Protocol => Sporadic;
          TB_SYS::Is_External => true;
          Priority => 253;
          TB_SYS::Thread_Type => Active;
          Compute_Execution_Time => 10 us .. 100 us;    
end RouteAggregatorService_AggregatorRole;

-- Thought from Derek: It would be valuable to do some (simple) functions in AADL implementations. But 
--   keep things like route planning to code rather than implementing here.
--   Think about what could be moved here for message processing, state machines, etc.


end RouteAggregatorService_AggregatorRole_Pkg;