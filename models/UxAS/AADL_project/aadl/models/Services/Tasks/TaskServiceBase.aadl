package TaskServiceBase_Package
public
    -- Data_types Packages
    with CMASI;
    with UXTASK;
    with IMPACT;
    with ROUTE;
    with UXNATIVE;
    with TB_SYS;
	-- This is a "dummy" top-level system. We use it so that we can check 
	--  "properties" of our component contract.
	process top_level
		features
			TaskImplementationRequest_in: in event data port uxtask::TaskImplementationRequest.i;
			RouteResponse_in: in event data port route::RouteResponse.i;
			SensorFootprintResponse_in: in event data port uxtask::SensorFootprintResponse.i;
			UniqueAutomationRequest_in: in event data port uxtask::UniqueAutomationRequest.i;
			TaskPlanOptions_out: out event data port uxtask::TaskPlanOptions.i;
			EntityState_in: in event data port cmasi::EntityState.i;
			
	end top_level;
	
	process implementation top_level.Impl
		subcomponents
			sub : thread TaskServiceBase; 
			
		connections
			conn0 : port TaskImplementationRequest_in -> sub.TaskImplementationRequest_in;
			conn1 : port RouteResponse_in -> sub.RouteResponse_in;
			conn2 : port SensorFootprintResponse_in-> sub.SensorFootprintResponse_in;
			conn3 : port UniqueAutomationRequest_in -> sub.UniqueAutomationRequest_in;
			conn4 : port sub.TaskPlanOptions_out -> TaskPlanOptions_out;
			conn5 : port EntityState_in -> sub.EntityState_in;
			
	end top_level.Impl;	
	
	
    thread TaskServiceBase
        features
            CreateNewService_in: in event data port uxnative::CreateNewService.i;
            GroundVehicleConfiguration_in: in event data port impact::GroundVehicleConfiguration.i;
            EntityConfiguration_in: in event data port cmasi::EntityConfiguration.i;
            SurfaceVehicleConfiguration_in: in event data port impact::SurfaceVehicleConfiguration.i;
            AirVehicleConfiguration_in: in event data port cmasi::AirVehicleConfiguration.i;
            EntityState_in: in event data port cmasi::EntityState.i;
            TaskImplementationRequest_in: in event data port uxtask::TaskImplementationRequest.i;
            GroundVehicleState_in: in event data port impact::GroundVehicleState.i;
            UniqueAutomationRequest_in: in event data port uxtask::UniqueAutomationRequest.i;
            UniqueAutomationResponse_in: in event data port uxtask::UniqueAutomationResponse.i;
--            RoutePlanResponse_in: in event data port route::RoutePlanResponse.i;
            SurfaceVehicleState_in: in event data port impact::SurfaceVehicleState.i;
            AirVehicleState_in: in event data port cmasi::AirVehicleState.i;
            TaskInitialized_out: out event data port uxtask::TaskInitialized.i;
            --RoutePlanRequest_out: out event data port route::RoutePlanRequest.i;
            TaskActive_out: out event data port uxtask::TaskActive.i;
            TaskImplementationResponse_out: out event data port uxtask::TaskImplementationResponse.i;
            TaskComplete_out: out event data port uxtask::TaskComplete.i;
            TaskPlanOptions_out: out event data port uxtask::TaskPlanOptions.i;
            
            --TODO: temp for testing not in the original aadl. 
            SensorFootprintRequests_out: out event data port uxtask::SensorFootprintRequests.i;
            SensorFootprintResponse_in: in event data port uxtask::SensorFootprintResponse.i;
            VehicleActionCommand_out: out event data port cmasi::VehicleActionCommand.i;
            
            --NOTE: derek changed these from RoutePlanRequest and RoutePlanResponse            
            RouteRequest_out: out event data port route::RouteRequest.i;
            RouteResponse_in: in event data port route::RouteResponse.i;
                        
            
        properties
            Dispatch_Protocol => Sporadic;

          TB_SYS::Is_External => true;
          Priority => 253;
          TB_SYS::Thread_Type => Active;
          Compute_Execution_Time => 10 us .. 100 us;             
        -- NOTES: 
        -- > BRodes: agree might not be able to handle inheritance, might require copy/paste
        -- > AFifarek (20170615): The agree annex does not reason about contracts defined in an "extended" component therefore the inherited components will need their contracts copy/paste
      
    end TaskServiceBase;
end TaskServiceBase_Package;